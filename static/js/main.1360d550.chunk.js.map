{"version":3,"sources":["BooksAPI.js","MainPageButton.js","MainPageHeader.js","CaseSwitcher.js","BookItem.js","Bookcase.js","BooksDisplayedPanel.js","MainPage.js","SearchResults.js","SearchBooksInput.js","SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","console","log","headers","MainPageButton","className","to","Component","MainPageHeader","CaseSwitcher","state","value","props","aBookCaseKey","handleChange","event","target","setState","onMove","aBook","this","onChange","disabled","BookItem","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","join","Bookcase","aBookCase","allBooks","booksOnThisShelf","filter","shelf","bookCaseKey","bookCaseName","map","id","BooksDisplayedPanel","bookCase","MainPage","SearchResults","searchBooks","myBooks","updatedBooks","book","b","SearchBooksInput","val","onSearch","type","placeholder","autoFocus","SearchPage","onResetSearch","onClick","App","componentDidMount","fetch","then","res","json","data","books","search","q","query","maxResults","method","body","JSON","stringify","searchResult","reset","moveBook","BooksAPI","s","concat","exact","path","render","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1360d550.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\nconsole.log('token:', {token});\n\n\nexport const headers = {\n  'Accept': 'application/json',\n  'Authorization': token,\n  'cache': 'no-store'\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n\t.then(data => data.books)\n\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query, maxResults })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass MainPageButton extends Component {\n  render() {\n    return (\n      <div className=\"open-search\">\n        <Link to=\"searchPage\">\n          <div>Add a Book</div>\n        </Link>\n      </div>\n    );\n};\n}\n\nexport default MainPageButton;\n","import React, { Component } from 'react';\n\n\nclass MainPageHeader extends Component {\n  render() {\n    return (\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n    )\n  }\n}\n\nexport default MainPageHeader;\n","import React, { Component } from 'react';\n\nclass CaseSwitcher extends Component {\n  state = {\n    value: this.props.aBookCaseKey\n  };\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({ value });\n    this.props.onMove(this.props.aBook, value);\n  };\n  render() {\n    return (\n      <div className=\"book-shelf-changer\">\n        <select value={this.state.value} onChange={this.handleChange}>\n          <option value=\"move\" disabled>\n            Move to...\n          </option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default CaseSwitcher;\n","import { React, Component } from 'react';\nimport CaseSwitcher from './CaseSwitcher';\n\nclass BookItem extends Component {\n  render() {\n    const { aBook, aBookCaseKey, onMove } = this.props;\n    return (\n      <li>\n    <div className=\"book\">\n      <div className=\"book-top\">\n        <div\n          className=\"book-cover\"\n          style={{ width: 128, height: 193, backgroundImage:\n          `url(${\n               aBook.imageLinks\n                ? aBook.imageLinks.thumbnail\n                : 'icons/book-placeholder.svg'\n            })`\n          }}\n        />\n        <CaseSwitcher aBook={aBook} aBookCaseKey={aBookCaseKey} onMove={onMove} />\n      </div>\n      <div className=\"book-title\">{aBook.title}</div>\n      <div className=\"book-authors\">\n        {aBook.authors ? aBook.authors.join(', ') : 'Unknown Author'}\n      </div>\n    </div>\n  </li>\n    );\n  }\n}\nexport default BookItem;\n","import React, { Component } from 'react';\nimport BookItem from './BookItem';\n\nclass Bookcase extends Component {\n\n  render(){\n    const { aBookCase, allBooks, onMove } = this.props;\n    console.log('Check filter: ',this.props);\n  \tconst booksOnThisShelf = allBooks.filter(aBook => {\n      if (aBook.shelf === aBookCase.bookCaseKey) {\n        return aBook\n      }});\n\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{aBookCase.bookCaseName}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {booksOnThisShelf.map(aBook => (\n            <BookItem key={aBook.id} aBook={aBook} aBookCaseKey={aBookCase.bookCaseKey} onMove={onMove} />\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n};\n\nexport default Bookcase;\n","import React, { Component } from 'react';\nimport Bookcase from './Bookcase';\n\nclass BooksDisplayedPanel extends Component {\n  render() {\n    const { bookCase, allBooks, onMove } = this.props;\n    return (\n          <div>\n            {bookCase.map(aBookCase => (\n              <Bookcase\n                key={aBookCase.bookCaseKey}\n                aBookCase={aBookCase}\n                allBooks={allBooks}\n                onMove={onMove}\n              />\n            ))}\n          </div>\n    );\n  }\n}\n\nexport default BooksDisplayedPanel;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainPageButton from './MainPageButton';\nimport MainPageHeader from './MainPageHeader';\nimport BooksDisplayedPanel from './BooksDisplayedPanel';\n\nclass MainPage extends Component {\n  render() {\n    const { bookCase, allBooks, onMove } = this.props;\n    return (\n      <div className=\"list-books\">\n        <MainPageHeader />\n        <div className=\"list-books-content\">\n         <BooksDisplayedPanel\n           bookCase = {bookCase}\n           allBooks = {allBooks}\n           onMove = {onMove}\n           />\n        </div>\n           <MainPageButton />\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport BookItem from './BookItem';\n\nconst SearchResults = props => {\n  const { searchBooks, myBooks,onMove } = props;\n\n  const updatedBooks = searchBooks.map(book => {\n    myBooks.map(b => {\n      if (b.id === book.id) {\n        book.shelf = b.shelf;\n      }\n      return b;\n    });\n    return book;\n  });\n  return (\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\">\n        {updatedBooks.map(aBook => (\n          <BookItem key={aBook.id} aBook={aBook} aBookCaseKey={aBook.shelf} onMove={onMove} />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React, { Component } from 'react';\n\nclass SearchBooksInput extends Component {\n  state = {\n    value: '',\n  };\n  handleChange = event => {\n    // this.setState({ value: event.target.value });\n    const val = event.target.value;\n    this.setState({ value: val }, () => {\n      // console.log(val);\n      // if (val.length >= 1) {\n      this.props.onSearch(val);\n      // }\n    });\n  };\n  render() {\n    return (\n      <div className=\"search-books-input-wrapper\">\n        <input\n          type=\"text\"\n          value={this.state.value}\n          placeholder=\"Search by title or author\"\n          onChange={this.handleChange}\n          autoFocus\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBooksInput;\n","import React, { Component } from 'react';\nimport SearchResults from './SearchResults';\nimport { Link } from 'react-router-dom';\nimport SearchBooksInput from './SearchBooksInput';\n\nclass SearchPage extends Component {\n  render() {\n    const { searchBooks, myBooks, onSearch, onResetSearch,onMove,aBookCase } = this.props;\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\">\n            <button className=\"close-search\" onClick={onResetSearch}>\n              Close\n            </button>\n          </Link>\n          <SearchBooksInput onSearch={onSearch} />\n        </div>\n        <SearchResults\n          searchBooks={searchBooks}\n          myBooks={myBooks}\n          onMove={onMove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport MainPage from './MainPage';\nimport SearchPage from './SearchPage';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    allBooks:[],\n    bookCase:[\n      { bookCaseKey: 'currentlyReading', bookCaseName: 'Currently Reading' },\n      { bookCaseKey: 'wantToRead', bookCaseName: 'Want to Read' },\n      { bookCaseKey: 'read', bookCaseName: 'Read' },\n    ],\n    searchResult: []\n  }\n  };\n\n  componentDidMount = () => {\n    BooksAPI.getAll().then(res => {\n        this.setState({ allBooks: res });\n      })\n  };\n\n  search = (q) => {\n      BooksAPI.search(q).then(res => {\n          this.setState({ searchResult: res });\n      });\n  };\n\n  reset = () => {\n    this.setState({ searchResult: [] });\n  };\n\n moveBook = (book, shelf) => {\n    console.log(\"book+++++++\", book);\n    BooksAPI.update(book, shelf);\n    if (shelf === 'none') {\n      this.setState(s => ({\n        allBooks: s.allBooks.filter(b => b.id !== book.id)\n      }));\n    } else {\n      book.shelf = shelf;\n      this.setState(s => ({\n       // myBooks: [...prevState.myBooks,book]\n       allBooks: s.allBooks.filter(b => {if (b.id !== book.id) {return b}}).concat(book)\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <MainPage\n              bookCase={this.state.bookCase}\n              allBooks={this.state.allBooks}\n              onMove={this.moveBook}\n            />\n          )}\n        />\n        <Route\n          path=\"/searchPage\"\n          render={() => (\n            <SearchPage\n              searchBooks={this.state.searchResult}\n              myBooks={this.state.allBooks}\n              onSearch={this.search}\n              onMove={this.moveBook}\n              onResetSearch={this.reset}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}